name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # 触发条件：推送版本标签（如 v2.1.0）
  release:
    types: [published]
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 需要写权限来创建 GitHub Release
  id-token: write  # 用于可信发布

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run tests
      run: |
        pytest tests/ -v --tb=short
      continue-on-error: true  # 允许测试失败仍然发布
    
    - name: Run linting
      run: |
        flake8 mail_mcp/ --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: pypi
      url: https://pypi.org/p/mail-mcp
    permissions:
      id-token: write  # 用于可信发布
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        verbose: true